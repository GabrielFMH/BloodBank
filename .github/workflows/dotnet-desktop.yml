name: .NET Core Desktop CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Debug, Release]
    runs-on: windows-latest

    env:
      Solution_Name: Proyecto_Final_Blood_Bank.sln                        # Reemplaza con el nombre de tu solución
      Test_Project_Path: ProyectoFinal/Proyecto_Final_Blood_Bank.Tests.csproj  # Ajusta a la ubicación de tu proyecto de pruebas
      Wap_Project_Directory: ProyectoFinal/ProyectoFinal.Package          # Directorio del proyecto de empaquetado (si aplica)
      Wap_Project_Path: ProyectoFinal/ProyectoFinal.Package\ProyectoFinal.Package.wapproj  # Ruta del proyecto de empaquetado

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'  # Asegúrate de usar la versión correcta

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    - name: Execute unit tests
      run: dotnet test ${{ env.Test_Project_Path }} --configuration ${{ matrix.configuration }}

    - name: Restore the application
      run: msbuild ${{ env.Solution_Name }} /t:Restore /p:Configuration=${{ matrix.configuration }}

    # Si usas un certificado para firmar tu aplicación, configura esta sección
    - name: Decode the pfx
      run: |
        $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.Base64_Encoded_Pfx }}")
        $certificatePath = Join-Path -Path $env:Wap_Project_Directory -ChildPath GitHubActionsWorkflow.pfx
        [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)

    - name: Create the app package
      run: msbuild ${{ env.Wap_Project_Path }} /p:Configuration=${{ matrix.configuration }} /p:UapAppxPackageBuildMode=StoreUpload /p:AppxBundle=Always /p:PackageCertificateKeyFile=GitHubActionsWorkflow.pfx /p:PackageCertificatePassword=${{ secrets.Pfx_Key }}

    - name: Remove the pfx
      run: Remove-Item -path ${{ env.Wap_Project_Directory }}\GitHubActionsWorkflow.pfx

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: MSIX Package
        path: ${{ env.Wap_Project_Directory }}\AppPackages
